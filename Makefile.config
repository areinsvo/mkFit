################################################################
# Build notes
################################################################

# Requires a recent gcc, e.g.:
#   . /opt/rh/devtoolset-2/enable
# This is also needed for icc as it uses gcc headers.


################################################################
# Configuration section
################################################################

# 1. Use ROOT or not
# Comment out or set to anything but "yes" to disable root
# WITH_ROOT := yes

# 2. Use gcc or icc
# Uncomment to use icc. For mic icc is always used.
# CXX := icc

# 3. Optimization
# -O3 implies vectorization and simd (but not AVX)
OPT := -O3

# 4. Vectorization settings
VEC_GCC  := -mavx # -fopt-info-vec
VEC_REP  := 1
VEC_ICC  := -mavx -vec-report=${VEC_REP}
VEC_MIC  := -mmic -vec-report=${VEC_REP}

# 5. Matriplex, intrinsics
# Matriplex is required for build in mkFit/
# Comment-out for matriplex, intrinsics
# USE_MATRIPLEX  := -DUSE_MATRIPLEX
# USE_INTRINSICS := -DMPLEX_USE_INTRINSICS

# 6. MIC stuff is built when icc is the chosen compiler

# 7. OSX hack.
# MT needs this on OSX-10.8, c++ -v
#    Apple LLVM version 5.1 (clang-503.0.40) (based on LLVM 3.4svn)
# OSX_CXX := -stdlib=libc++


################################################################
# Derived settings
################################################################

CPPFLAGS := -I. -MMD ${USE_MATRIPLEX} ${USE_INTRINSICS} ${OSX_CPP}
CXXFLAGS := ${OPT} -std=c++11 ${OSX_CXX}
LDFLAGS  :=

ifneq ($(CXX),icc)
  CXXFLAGS += -Wall -Wno-unknown-pragmas
endif

ifdef USE_MATRIPLEX

ifeq ($(CXX),icc)
  CXXFLAGS += -openmp
  LDFLAGS  += -openmp
  VEC_HOST := ${VEC_ICC}
else
  CXXFLAGS += -fopenmp
  LDFLAGS  += -fopenmp
  VEC_HOST := ${VEC_GCC}
endif

endif

CPPFLAGS_NO_ROOT := ${CPPFLAGS} -DNO_ROOT
LDFLAGS_NO_ROOT  := ${LDFLAGS}

ifeq (${WITH_ROOT},yes)
  CPPFLAGS += $(shell root-config --cflags)
  LDFLAGS  += $(shell root-config --libs)
else
  CPPFLAGS += -DNO_ROOT
endif
